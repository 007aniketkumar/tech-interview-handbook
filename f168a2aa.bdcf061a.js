(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{139:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(1),i=n(6),r=(n(0),n(145)),o={id:"hash-table",title:"Hash Table"},l={id:"algorithms/hash-table",title:"Hash Table",description:"## Sample questions",source:"@site/../contents/algorithms/hash-table.md",permalink:"/tech-interview-handbook/algorithms/hash-table",editUrl:"https://github.com/yangshun/tech-interview-handbook/edit/master/contents/../contents/algorithms/hash-table.md",lastUpdatedBy:"Yangshun Tay",lastUpdatedAt:1569463535,sidebar:"docs",previous:{title:"Graph",permalink:"/tech-interview-handbook/algorithms/graph"},next:{title:"Heap",permalink:"/tech-interview-handbook/algorithms/heap"}},s=[{value:"Sample questions",id:"sample-questions",children:[]}],c={rightToc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"sample-questions"},"Sample questions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Describe an implementation of a least-used cache, and big-O notation of it."),Object(r.b)("li",{parentName:"ul"},"A question involving an API's integration with hash map where the buckets of hash map are made up of linked lists."),Object(r.b)("li",{parentName:"ul"},"Implement data structure ",Object(r.b)("inlineCode",{parentName:"li"},"Map")," storing pairs of integers (key, value) and define following member functions in O(1) runtime: ",Object(r.b)("inlineCode",{parentName:"li"},"void insert(key, value)"),", ",Object(r.b)("inlineCode",{parentName:"li"},"void delete(key)"),", ",Object(r.b)("inlineCode",{parentName:"li"},"int get(key)"),", ",Object(r.b)("inlineCode",{parentName:"li"},"int getRandomKey()"),". ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2016/08/14/uber-interview-question-map-implementation/"}),"(Solution)"))))}p.isMDXComponent=!0},145:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return p}));var a=n(0),i=n.n(a),r=i.a.createContext({}),o=function(e){var t=i.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=o(e.components);return i.a.createElement(r.Provider,{value:t},e.children)};var s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},c=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),p=o(n),u=a,m=p[l+"."+u]||p[u]||s[u]||r;return n?i.a.createElement(m,Object.assign({},{ref:t},c,{components:n})):i.a.createElement(m,Object.assign({},{ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);