(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{226:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return s}));r(60),r(32),r(23),r(24),r(61),r(0);var n=r(235);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var i={id:"topics",title:"Topics"},l=[{value:"Arrays",id:"arrays",children:[]},{value:"Strings",id:"strings",children:[]},{value:"Sorting",id:"sorting",children:[]},{value:"Linked Lists",id:"linked-lists",children:[]},{value:"Stacks",id:"stacks",children:[]},{value:"Queues",id:"queues",children:[]},{value:"Hash tables",id:"hash-tables",children:[]},{value:"Trees",id:"trees",children:[]},{value:"Binary Search Trees",id:"binary-search-trees",children:[]},{value:"Heaps / Priority Queues",id:"heaps--priority-queues",children:[]},{value:"Graphs",id:"graphs",children:[]},{value:"Dynamic Programming",id:"dynamic-programming",children:[]},{value:"System Design",id:"system-design",children:[]}],c={rightToc:l},b="wrapper";function s(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,["components"]);return Object(n.b)(b,a({},c,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"arrays"},"Arrays"),Object(n.b)("h2",{id:"strings"},"Strings"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Prefix trees (Tries)"),Object(n.b)("li",{parentName:"ul"},"Suffix trees"),Object(n.b)("li",{parentName:"ul"},"Suffix arrays"),Object(n.b)("li",{parentName:"ul"},"KMP"),Object(n.b)("li",{parentName:"ul"},"Rabin-Karp"),Object(n.b)("li",{parentName:"ul"},"Boyer-Moore")),Object(n.b)("h2",{id:"sorting"},"Sorting"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Bubble sort"),Object(n.b)("li",{parentName:"ul"},"Insertion sort"),Object(n.b)("li",{parentName:"ul"},"Merge sort"),Object(n.b)("li",{parentName:"ul"},"Quick sort"),Object(n.b)("li",{parentName:"ul"},"Selection sort"),Object(n.b)("li",{parentName:"ul"},"Bucket sort"),Object(n.b)("li",{parentName:"ul"},"Radix sort"),Object(n.b)("li",{parentName:"ul"},"Counting sort")),Object(n.b)("h2",{id:"linked-lists"},"Linked Lists"),Object(n.b)("h2",{id:"stacks"},"Stacks"),Object(n.b)("h2",{id:"queues"},"Queues"),Object(n.b)("h2",{id:"hash-tables"},"Hash tables"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Collision resolution algorithms")),Object(n.b)("h2",{id:"trees"},"Trees"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"BFS"),Object(n.b)("li",{parentName:"ul"},"DFS (inorder, postorder, preorder)"),Object(n.b)("li",{parentName:"ul"},"Height")),Object(n.b)("h2",{id:"binary-search-trees"},"Binary Search Trees"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Insert node"),Object(n.b)("li",{parentName:"ul"},"Delete a node"),Object(n.b)("li",{parentName:"ul"},"Find element in BST"),Object(n.b)("li",{parentName:"ul"},"Find min, max element in BST"),Object(n.b)("li",{parentName:"ul"},"Get successor element in tree"),Object(n.b)("li",{parentName:"ul"},"Check if a binary tree is a BST or not")),Object(n.b)("h2",{id:"heaps--priority-queues"},"Heaps / Priority Queues"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Insert"),Object(n.b)("li",{parentName:"ul"},"Bubble up"),Object(n.b)("li",{parentName:"ul"},"Extract max"),Object(n.b)("li",{parentName:"ul"},"Remove"),Object(n.b)("li",{parentName:"ul"},"Heapify"),Object(n.b)("li",{parentName:"ul"},"Heap sort")),Object(n.b)("h2",{id:"graphs"},"Graphs"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Various implementations",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Adjacency matrix"),Object(n.b)("li",{parentName:"ul"},"Adjacency list"),Object(n.b)("li",{parentName:"ul"},"Adjacency map"))),Object(n.b)("li",{parentName:"ul"},"Single-source shortest path"),Object(n.b)("li",{parentName:"ul"},"Dijkstra"),Object(n.b)("li",{parentName:"ul"},"Bellman-Ford"),Object(n.b)("li",{parentName:"ul"},"Topo sort"),Object(n.b)("li",{parentName:"ul"},"MST"),Object(n.b)("li",{parentName:"ul"},"Prim algorithm"),Object(n.b)("li",{parentName:"ul"},"Kruskal's algorithm"),Object(n.b)("li",{parentName:"ul"},"Union Find Data Structure"),Object(n.b)("li",{parentName:"ul"},"Count connected components in a graph"),Object(n.b)("li",{parentName:"ul"},"List strongly connected components in a graph"),Object(n.b)("li",{parentName:"ul"},"Check for bipartite graph")),Object(n.b)("h2",{id:"dynamic-programming"},"Dynamic Programming"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Count Change"),Object(n.b)("li",{parentName:"ul"},"0-1 Knapsack")),Object(n.b)("h2",{id:"system-design"},"System Design"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"http://www.hiredintech.com/system-design/"}),"http://www.hiredintech.com/system-design/")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023"}),"https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/"}),"http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"https://github.com/donnemartin/system-design-primer"}),"https://github.com/donnemartin/system-design-primer")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",a({parentName:"li"},{href:"https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf"}),"https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf"))))}s.isMDXComponent=!0},235:function(e,t,r){"use strict";r.d(t,"a",(function(){return c})),r.d(t,"b",(function(){return o}));var n=r(0),a=r.n(n),i=a.a.createContext({}),l=function(e){var t=a.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):Object.assign({},t,e)),r},c=function(e){var t=l(e.components);return a.a.createElement(i.Provider,{value:t},e.children)};var b="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,b=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(r[n]=e[n]);return r}(e,["components","mdxType","originalType","parentName"]),u=l(r),o=n,p=u[c+"."+o]||u[o]||s[o]||i;return r?a.a.createElement(p,Object.assign({},{ref:t},b,{components:r})):a.a.createElement(p,Object.assign({},{ref:t},b))}));function o(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[b]="string"==typeof e?e:n,l[1]=c;for(var o=2;o<i;o++)l[o]=r[o];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);