(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return b}),n.d(t,"rightToc",function(){return o}),n.d(t,"default",function(){return c});n(0);var r=n(101);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b={id:"math",title:"Math"},o=[],l={rightToc:o},u="wrapper";function c(e){var t=e.components,n=i(e,["components"]);return Object(r.b)(u,a({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Create a square root function."),Object(r.b)("li",{parentName:"ul"},'Given a string such as "123" or "67", write a function to output the number represented by the string without using casting.'),Object(r.b)("li",{parentName:"ul"},'Make a program that can print out the text form of numbers from 1 - 1000 (ex. 20 is "twenty", 105 is "one hundred and five").'),Object(r.b)("li",{parentName:"ul"},"Write a function that parses Roman numerals.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"E.g. ",Object(r.b)("inlineCode",{parentName:"li"},"XIV")," returns ",Object(r.b)("inlineCode",{parentName:"li"},"14"),"."))),Object(r.b)("li",{parentName:"ul"},"Write in words for a given digit.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"E.g. ",Object(r.b)("inlineCode",{parentName:"li"},"123")," returns ",Object(r.b)("inlineCode",{parentName:"li"},"one hundred and twenty three"),"."))),Object(r.b)("li",{parentName:"ul"},"Given a number ",Object(r.b)("inlineCode",{parentName:"li"},"N"),", find the largest number just smaller than ",Object(r.b)("inlineCode",{parentName:"li"},"N")," that can be formed using the same digits as ",Object(r.b)("inlineCode",{parentName:"li"},"N"),"."),Object(r.b)("li",{parentName:"ul"},"Compute the square root of ",Object(r.b)("inlineCode",{parentName:"li"},"N")," without using any existing functions."),Object(r.b)("li",{parentName:"ul"},"Given numbers represented as binary strings, and return the string containing their sum.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"E.g. ",Object(r.b)("inlineCode",{parentName:"li"},"add('10010', '101')")," returns ",Object(r.b)("inlineCode",{parentName:"li"},"'10111'"),"."))),Object(r.b)("li",{parentName:"ul"},"Take in an integer and return its english word-format.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},'E.g. 1 -> "one", -10,203 -> "negative ten thousand two hundred and three".'))),Object(r.b)("li",{parentName:"ul"},"Write a function that returns values randomly, according to their weight. Suppose we have 3 elements with their weights: A (1), B (1) and C (2). The function should return A with probability 25%, B with 25% and C with 50% based on the weights.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2016/11/11/uber-interview-question-weighted-random-numbers/"}),"Source")))),Object(r.b)("li",{parentName:"ul"},"Given a number, how can you get the next greater number with the same set of digits?",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2017/01/20/arrange-given-numbers-to-form-the-biggest-number-possible/"}),"Source"))))))}c.isMDXComponent=!0}}]);