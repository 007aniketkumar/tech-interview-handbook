(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{95:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",function(){return l}),a.d(t,"rightToc",function(){return o}),a.d(t,"default",function(){return p});a(0);var n=a(101);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l={id:"tree",title:"Tree"},o=[],b={rightToc:o},c="wrapper";function p(e){var t=e.components,a=i(e,["components"]);return Object(n.b)(c,r({},b,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Find the height of a tree."),Object(n.b)("li",{parentName:"ul"},"Find the longest path from the root to leaf in a tree."),Object(n.b)("li",{parentName:"ul"},"Find the deepest left leaf of a tree."),Object(n.b)("li",{parentName:"ul"},"Print all paths of a binary tree.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2016/04/15/print-all-paths-of-a-binary-tree/"}),"Source")))),Object(n.b)("li",{parentName:"ul"},"Second largest element of a BST.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2016/06/03/second-largest-element-of-a-binary-search-tree/"}),"Source")))),Object(n.b)("li",{parentName:"ul"},"Given a binary tree and two nodes, how to find the common ancestor of the two nodes?",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2016/07/06/lowest-common-ancestor/"}),"Source")))),Object(n.b)("li",{parentName:"ul"},"Find the lowest common ancestor of two nodes in a binary search tree."),Object(n.b)("li",{parentName:"ul"},"Print the nodes in an n-ary tree level by level, one printed line per level."),Object(n.b)("li",{parentName:"ul"},"Given a directory of files and folders (and relevant functions), how would you parse through it to find equivalent files?"),Object(n.b)("li",{parentName:"ul"},"Write a basic file system and implement the commands ls, pwd, mkdir, create, rm, cd, cat, mv."),Object(n.b)("li",{parentName:"ul"},"Compute the intersection of two binary search trees."),Object(n.b)("li",{parentName:"ul"},"Given a binary tree, output all the node to leaf paths of it."),Object(n.b)("li",{parentName:"ul"},"Given a string of characters without spaces, is there a way to break the string into valid words without leftover characters?"),Object(n.b)("li",{parentName:"ul"},"Print a binary tree level by level."),Object(n.b)("li",{parentName:"ul"},"Determine if a binary tree is \"complete\" (i.e, if all leaf nodes were either at the maximum depth or max depth-1, and were 'pressed' along the left side of the tree)."),Object(n.b)("li",{parentName:"ul"},"Find the longest path in a binary tree. The path may start and end at any node."),Object(n.b)("li",{parentName:"ul"},"Determine if a binary tree is a BST."),Object(n.b)("li",{parentName:"ul"},"Given a binary tree, serialize it into a string. Then deserialize it."),Object(n.b)("li",{parentName:"ul"},"Print a binary tree by column."),Object(n.b)("li",{parentName:"ul"},"Given a node, find the next element in a BST."),Object(n.b)("li",{parentName:"ul"},"Find the shortest subtree that consist of all the deepest nodes. The tree is not binary."),Object(n.b)("li",{parentName:"ul"},"Print out the sum of each row in a binary tree."),Object(n.b)("li",{parentName:"ul"},"Pretty print a JSON object."),Object(n.b)("li",{parentName:"ul"},"Convert a binary tree to a doubly circular linked list."),Object(n.b)("li",{parentName:"ul"},"Find the second largest number in a binary tree."),Object(n.b)("li",{parentName:"ul"},"Given a tree, find the longest branch."),Object(n.b)("li",{parentName:"ul"},"Convert a tree to a linked list."),Object(n.b)("li",{parentName:"ul"},"Given two trees, write code to find out if tree A is a subtree of tree B."),Object(n.b)("li",{parentName:"ul"},"Deepest node in a tree.",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",r({parentName:"li"},{href:"http://blog.gainlo.co/index.php/2016/04/26/deepest-node-in-a-tree/"}),"Source"))))))}p.isMDXComponent=!0}}]);